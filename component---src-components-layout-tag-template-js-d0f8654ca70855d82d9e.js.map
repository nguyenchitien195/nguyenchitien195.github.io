{"version":3,"sources":["webpack:///./src/components/layout/tag-template.js"],"names":["Template","data","posts","sitePage","console","log","className","context","tag","totalCount","nodes","map","post","index","key","fluid","color","Content","Header","to","frontmatter","slug","title","Meta","date","Description","desc","extra","tags","pageQuery"],"mappings":"6FAAA,sJAIe,SAASA,EAAT,GAEX,IADFC,EACC,EADDA,KAEQC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SAEf,OADAC,QAAQC,IAAIH,EAAOC,GAEjB,yBAAKG,UAAU,uBACb,6BACE,oCAAS,+BAAKH,EAASI,QAAQC,IAAtB,MAAoC,6BAC7C,8BAAOL,EAASI,QAAQE,WAAxB,IAAqCN,EAASI,QAAQE,WAAa,EAAI,QAAU,SAElFP,EAAMQ,MAAMC,KAAI,SAACC,EAAMC,GACtB,OACE,yBAAKC,IAAKD,GACR,kBAAC,IAAD,CAAME,OAAK,EAACC,MAAM,OAChB,kBAAC,IAAKC,QAAN,KACE,kBAAC,IAAKC,OAAN,KACE,kBAAC,OAAD,CAAMC,GAAI,UAAYP,EAAKQ,YAAYC,MAAOT,EAAKQ,YAAYE,QAEjE,kBAAC,IAAKC,KAAN,KACE,0BAAMjB,UAAU,QAAQM,EAAKQ,YAAYI,OAE3C,kBAAC,IAAKC,YAAN,KACGb,EAAKQ,YAAYM,OAGtB,kBAAC,IAAKT,QAAN,CAAcU,OAAK,GAChBf,EAAKQ,YAAYQ,KAAKjB,KAAI,SAACH,EAAKK,GAC/B,OACE,kBAAC,OAAD,CAAMC,IAAKD,EAAOM,GAAE,eAAiBX,GACnC,kBAAC,IAAD,CAAOA,KAAG,EAACQ,MAAOb,EAASI,QAAQC,MAAQA,EAAM,OAAS,QACvDA,SAOb,kCAQL,IAAMqB,EAAS","file":"component---src-components-layout-tag-template-js-d0f8654ca70855d82d9e.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\";\nimport { Card, Icon, Label } from 'semantic-ui-react';\n\nexport default function Template({\n  data // this prop will be injected by the GraphQL query below.\n}) {\n  const { posts, sitePage } = data // data.markdownRemark holds your post data\n  console.log(posts, sitePage);\n  return (\n    <div className=\"blog-post-container\">\n      <div>\n        <h2>Tag: <b>\"{sitePage.context.tag}\"</b></h2><br />\n        <span>{sitePage.context.totalCount} {sitePage.context.totalCount > 1 ? \"posts\" : \"post\"}</span>\n      </div>\n      {posts.nodes.map((post, index) => {\n        return (\n          <div key={index}>\n            <Card fluid color='red'>\n              <Card.Content>\n                <Card.Header>\n                  <Link to={'/blogs/' + post.frontmatter.slug}>{post.frontmatter.title}</Link>\n                </Card.Header>\n                <Card.Meta>\n                  <span className='date'>{post.frontmatter.date}</span>\n                </Card.Meta>\n                <Card.Description>\n                  {post.frontmatter.desc}\n                </Card.Description>\n              </Card.Content>\n              <Card.Content extra>\n                {post.frontmatter.tags.map((tag, index) => {\n                  return (\n                    <Link key={index} to={`/blogs/tags/${tag}`}>\n                      <Label tag color={sitePage.context.tag === tag ? \"blue\" : \"grey\"}>\n                        {tag}\n                      </Label>\n                    </Link>\n                  )\n                })}\n              </Card.Content>\n            </Card>\n            <br/>\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport const pageQuery = graphql`\n  query($tag: String!) {\n    sitePage(context: {tag: {eq: $tag}}) {\n      context {\n        tag\n        totalCount\n      }\n    },\n    posts: allMarkdownRemark(filter: {frontmatter: {tags: {in: [$tag]}}}) {\n      nodes {\n        frontmatter {\n          title\n          desc\n          date\n          tags\n          slug\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}