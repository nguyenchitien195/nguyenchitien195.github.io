{"version":3,"sources":["webpack:///./src/pages/contact.js"],"names":["Contact","props","state","status","submitForm","ev","preventDefault","form","target","data","FormData","xhr","XMLHttpRequest","open","method","action","setRequestHeader","console","log","onreadystatechange","readyState","DONE","reset","setState","send","render","this","intl","className","formatMessage","id","onSubmit","name","placeholder","type","href","viewBox","stroke","fill","cx","cy","r","strokeWidth","d","React","Component","injectIntl"],"mappings":"uJAKMA,E,oBAEJ,WAAYC,GAAQ,IAAD,SACjB,cAAMA,IAAN,MACKC,MAAQ,CACXC,OAAQ,IAHO,E,kHAOnBC,WAAA,SAAWC,GAAK,IAAD,OACbA,EAAGC,iBACH,IAAMC,EAAOF,EAAGG,OACVC,EAAO,IAAIC,SAASH,GACpBI,EAAM,IAAIC,eAChBD,EAAIE,KAAKN,EAAKO,OAAQP,EAAKQ,QAC3BJ,EAAIK,iBAAiB,SAAU,oBAC/BC,QAAQC,IAAI,UACZP,EAAIQ,mBAAqB,WACnBR,EAAIS,aAAeR,eAAeS,OACnB,MAAfV,EAAIR,QACNI,EAAKe,QACL,EAAKC,SAAS,CAAEpB,OAAQ,aAExB,EAAKoB,SAAS,CAAEpB,OAAQ,YAG5BQ,EAAIa,KAAKf,I,EAGXgB,OAAA,WAAU,IAAD,OACCtB,EAAWuB,KAAKxB,MAAhBC,OACAwB,EAASD,KAAKzB,MAAd0B,KAER,OACE,yBAAKC,UAAU,cACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,UACb,yBAAKA,UAAU,iBACb,yBAAKA,UAAU,sBACb,yBAAKA,UAAU,+BACf,yBAAKA,UAAU,kCACf,yBAAKA,UAAU,mCAEjB,yBAAKA,UAAU,uBACb,yBAAKA,UAAU,2BACf,yBAAKA,UAAU,2BACf,yBAAKA,UAAU,6BAGnB,yBAAKA,UAAU,eACb,yBAAKA,UAAU,yBACb,yBAAKA,UAAU,aACb,8BAAOD,EAAKE,cAAc,CAAEC,GAAI,cAElC,yBAAKF,UAAU,eAAeD,EAAKE,cAAc,CAAEC,GAAI,0BAAvD,oBAEF,yBAAKF,UAAU,oBACb,0BACEE,GAAG,eACHF,UAAU,WACVG,SAAU,SAAC1B,GAAD,OAAQ,EAAKD,WAAWC,IAClCU,OAAO,gCACPD,OAAO,QAEP,yBAAKc,UAAU,kBACb,2BAAOA,UAAU,mBAAmBI,KAAK,OAAOC,YAAaN,EAAKE,cAAc,CAAEC,GAAI,4BAExF,yBAAKF,UAAU,kBACb,2BAAOA,UAAU,mBAAmBI,KAAK,QAAQC,YAAaN,EAAKE,cAAc,CAAEC,GAAI,6BAEzF,yBAAKF,UAAU,0BACb,8BAAUI,KAAK,UAAUJ,UAAU,mBAAmBK,YAAaN,EAAKE,cAAc,CAAEC,GAAI,+BAE9F,yBAAKF,UAAU,0BACD,YAAXzB,EAAuB,sCACtB,6BACE,4BAAQ+B,KAAK,QAAQN,UAAU,mBAAmBD,EAAKE,cAAc,CAAEC,GAAI,4BAC3E,4BAAQI,KAAK,SAASN,UAAU,mBAAmBD,EAAKE,cAAc,CAAEC,GAAI,2BAGpE,UAAX3B,GAAsB,8DAMjC,yBAAKyB,UAAU,WACb,6CACA,uBAAGA,UAAU,eAAeO,KAAK,6CAA6C3B,OAAO,UACnF,yBAAKoB,UAAU,WAAWQ,QAAQ,eAChC,uBAAGC,OAAO,UAAUC,KAAK,QACvB,4BAAQC,GAAG,MAAMC,GAAG,MAAMC,EAAE,KAAKC,YAAY,OAC7C,0BAAMC,EAAE,0FAA0FD,YAAY,OAC9G,0BAAMC,EAAE,4FAA4FD,YAAY,OAChH,0BAAMC,EAAE,4FAA4FD,YAAY,SAGpH,8C,GAjGQE,IAAMC,WA2GbC,+BAAW9C,I","file":"component---src-pages-contact-js-22a963f25ffef31bf589.js","sourcesContent":["import React from 'react';\nimport { injectIntl } from \"gatsby-plugin-intl\";\n\nimport './contact.css';\n\nclass Contact extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      status: \"\"\n    };\n  }\n\n  submitForm(ev) {\n    ev.preventDefault();\n    const form = ev.target;\n    const data = new FormData(form);\n    const xhr = new XMLHttpRequest();\n    xhr.open(form.method, form.action);\n    xhr.setRequestHeader(\"Accept\", \"application/json\");\n    console.log('submit')\n    xhr.onreadystatechange = () => {\n      if (xhr.readyState !== XMLHttpRequest.DONE) return;\n      if (xhr.status === 200) {\n        form.reset();\n        this.setState({ status: \"SUCCESS\" });\n      } else {\n        this.setState({ status: \"ERROR\" });\n      }\n    };\n    xhr.send(data);\n  }\n\n  render() {\n    const { status } = this.state;\n    const { intl } = this.props;\n\n    return (\n      <div className=\"background\">\n        <div className=\"container\">\n          <div className=\"screen\">\n            <div className=\"screen-header\">\n              <div className=\"screen-header-left\">\n                <div className=\"screen-header-button close\"></div>\n                <div className=\"screen-header-button maximize\"></div>\n                <div className=\"screen-header-button minimize\"></div>\n              </div>\n              <div className=\"screen-header-right\">\n                <div className=\"screen-header-ellipsis\"></div>\n                <div className=\"screen-header-ellipsis\"></div>\n                <div className=\"screen-header-ellipsis\"></div>\n              </div>\n            </div>\n            <div className=\"screen-body\">\n              <div className=\"screen-body-item left\">\n                <div className=\"app-title\">\n                  <span>{intl.formatMessage({ id: 'contact' })}</span>\n                </div>\n                <div className=\"app-contact\">{intl.formatMessage({ id: 'contact-content.phone' })} : 0989.260.552</div>\n              </div>\n              <div className=\"screen-body-item\">\n                <form\n                  id=\"contact-form\"\n                  className=\"app-form\"\n                  onSubmit={(ev) => this.submitForm(ev)}\n                  action=\"https://formspree.io/xwkrpbyn\"\n                  method=\"POST\"\n                >\n                  <div className=\"app-form-group\">\n                    <input className=\"app-form-control\" name=\"name\" placeholder={intl.formatMessage({ id: 'contact-content.name' })} />\n                  </div>\n                  <div className=\"app-form-group\">\n                    <input className=\"app-form-control\" name=\"email\" placeholder={intl.formatMessage({ id: 'contact-content.email' })} />\n                  </div>\n                  <div className=\"app-form-group message\">\n                    <textarea name=\"message\" className=\"app-form-control\" placeholder={intl.formatMessage({ id: 'contact-content.message' })} />\n                  </div>\n                  <div className=\"app-form-group buttons\">\n                    {status === \"SUCCESS\" ? <p>Thanks!</p> :\n                      <div>\n                        <button type=\"reset\" className=\"app-form-button\">{intl.formatMessage({ id: 'contact-content.cancel' })}</button>\n                        <button type=\"submit\" className=\"app-form-button\">{intl.formatMessage({ id: 'contact-content.send' })}</button>\n                      </div>\n                    }\n                    {status === \"ERROR\" && <p>Ooops! There was an error.</p>}\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n          <div className=\"credits\">\n            <span>inspired by</span>\n            <a className=\"credits-link\" href=\"https://dribbble.com/shots/2666271-Contact\" target=\"_blank\">\n              <svg className=\"dribbble\" viewBox=\"0 0 200 200\">\n                <g stroke=\"#ffffff\" fill=\"none\">\n                  <circle cx=\"100\" cy=\"100\" r=\"90\" strokeWidth=\"20\"></circle>\n                  <path d=\"M62.737004,13.7923523 C105.08055,51.0454853 135.018754,126.906957 141.768278,182.963345\" strokeWidth=\"20\"></path>\n                  <path d=\"M10.3787186,87.7261455 C41.7092324,90.9577894 125.850356,86.5317271 163.474536,38.7920951\" strokeWidth=\"20\"></path>\n                  <path d=\"M41.3611549,163.928627 C62.9207607,117.659048 137.020642,86.7137169 189.041451,107.858103\" strokeWidth=\"20\"></path>\n                </g>\n              </svg>\n              <span>Gururaj</span>\n            </a>\n          </div>\n        </div>\n      </div>\n\n    )\n  }\n}\n\nexport default injectIntl(Contact);"],"sourceRoot":""}